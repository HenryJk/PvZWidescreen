#![allow(non_snake_case)]

use std::ffi::c_void;

use windows::Win32::{
    Foundation::HWND, System::Threading::RTL_CRITICAL_SECTION, UI::WindowsAndMessaging::HICON,
};

use crate::{
    stub::{
        BetaSupport, InternetManager, LevelStats, Music, PlayerInfo, PopDRMComm, ProfileMgr,
        ReanimatorCache, StdBasicString, StdList, StdMap, StdSet,
    },
    AwardScreen, Board, BoardResult, Buffer, ChallengeScreen, CrazyDaveState, CreditScreen,
    DDInterface, EffectSystem, GameMode, GameScenes, GameSelector, MusicInterface, PoolEffect,
    Ratio, ResourceManager, SeedChooserScreen, SoundManager, TRect, TitleScreen, TodFoley,
    TypingCheck, WidgetManager, ZenGarden,
};

#[repr(C)]
pub struct SexyAppBase {
    unknown0: [u8; 8],
    pub mRandSeed: u32,
    pub mCompanyName: StdBasicString,
    pub mFullCompanyName: StdBasicString,
    pub mProdName: StdBasicString,
    pub mTitle: StdBasicString,
    pub mRegKey: StdBasicString,
    pub mChangeDirTo: StdBasicString,
    pub mRelaxUpdateBacklogCount: i32,
    pub mPreferredX: i32,
    pub mPreferredY: i32,
    pub mWidth: i32,
    pub mHeight: i32,
    pub mFullscreenBits: i32,
    pub mMusicVolume: f64,
    pub mSfxVolume: f64,
    pub mDemoMusicVolume: f64,
    pub mDemoSfxVolume: f64,
    pub mNoSoundNeeded: bool,
    pub mWantFMod: bool,
    pub mCmdLineParsed: bool,
    pub mSkipSignatureChecks: bool,
    pub mStandardWordWrap: bool,
    pub mbAllowExtendedChars: bool,
    pub mMutex: *mut c_void,
    pub mOnlyAllowOneCopyToRun: bool,
    pub mNotifyGameMessage: u32,
    pub mCritSect: RTL_CRITICAL_SECTION,
    pub mBetaValidate: bool,
    pub mAdd8BitMaxTable: [u8; 512],
    pub mWidgetManager: *mut WidgetManager,
    pub mDialogMap: StdMap,
    pub mDialogList: StdMap,
    pub mPrimaryThreadId: u32,
    pub mSEHOccured: bool,
    pub mShutdown: bool,
    pub mExitToTop: bool,
    pub mIsWindowed: bool,
    pub mIsPhysWindowed: bool,
    pub mFullScreenWindow: bool,
    pub mForceFullscreen: bool,
    pub mForceWindowed: bool,
    pub mInitialized: bool,
    pub mProcessInTimer: bool,
    pub mTimeLoaded: u32,
    pub mHWnd: *mut HWND,
    pub mInvisHWnd: *mut HWND,
    pub mIsScreenSaver: bool,
    pub mAllowMonitorPowersave: bool,
    pub mDeferredMessages: StdList,
    pub mNoDefer: bool,
    pub mFullScreenPageFlip: bool,
    pub mTabletPC: bool,
    pub mDDInterface: *mut DDInterface,
    pub mAlphaDisabled: bool,
    pub mMusicInterface: *mut MusicInterface,
    pub mReadFromRegistry: bool,
    pub mRegisterLink: StdBasicString,
    pub mProductVersion: StdBasicString,
    pub mCursorImages: [u8; 52],
    pub mOverrideCursor: *mut HICON,
    pub mIsOpeningURL: bool,
    pub mShutdownOnURLOpen: bool,
    pub mOpeningURL: StdBasicString,
    pub mOpeningURLTime: u32,
    pub mLastTimerTime: u32,
    pub mLastBigDelayTime: u32,
    pub mUnmutedMusicVolume: f64,
    pub mUnmutedSfxVolume: f64,
    pub mMuteCount: i32,
    pub mAutoMuteCount: i32,
    pub mDemoMute: bool,
    pub mMuteOnLostFocus: bool,
    pub mMemoryImageSet: StdSet,
    pub mSharedImageMap: StdMap,
    pub mCleanupSharedImages: bool,
    pub mNonDrawCount: i32,
    pub mFrameTime: i32,
    pub mIsDrawing: bool,
    pub mLastDrawWasEmpty: bool,
    pub mHasPendingDraw: bool,
    unknown2: [u8; 5],
    pub mPendingUpdatesAcc: f64,
    pub mUpdateFTimeAcc: f64,
    pub mLastTimeCheck: u32,
    pub mLastTime: u32,
    pub mLastUserInputTick: u32,
    pub mSleepCount: i32,
    pub mDrawCount: i32,
    pub mUpdateCount: i32,
    pub mUpdateAppState: i32,
    pub mUpdateAppDepth: i32,
    pub mUpdateMultiplier: f64,
    pub mPaused: bool,
    pub mFastForwardToUpdateNum: i32,
    pub mFastForwardToMarker: bool,
    pub mFastForwardStep: bool,
    pub mLastDrawTick: u32,
    pub mNextDrawTick: u32,
    pub mStepMode: i32,
    pub mCursorNum: i32,
    pub mSoundManager: *mut SoundManager,
    pub mHandCursor: *mut HICON,
    pub mDraggingCursor: *mut HICON,
    pub mSafeDeleteList: StdList,
    pub mMouseIn: bool,
    pub mRunning: bool,
    pub mActive: bool,
    pub mMinimized: bool,
    pub mPhysMinimized: bool,
    pub mIsDisabled: bool,
    pub mHasFocus: bool,
    pub mDrawTime: i32,
    pub mFPSStartTick: u32,
    pub mFPSFlipCount: i32,
    pub mFPSDirtyCount: i32,
    pub mFPSTime: i32,
    pub mFPSCount: i32,
    pub mShowFPS: bool,
    pub mShowFPSMode: i32,
    pub mScreenBltTime: i32,
    pub mAutoStartLoadingThread: bool,
    pub mLoadingThreadStarted: bool,
    pub mLoadingThreadCompleted: bool,
    pub mLoaded: bool,
    pub mYieldMainThread: bool,
    pub mLoadingFailed: bool,
    pub mCursorThreadRunning: bool,
    pub mSysCursor: bool,
    pub mCustomCursorsEnabled: bool,
    pub mCustomCursorDirty: bool,
    pub mLastShutdownWasGraceful: bool,
    pub mIsWideWindow: bool,
    pub mWriteToSexyCache: bool,
    pub mSexyCacheBuffers: bool,
    pub mNumLoadingThreadTasks: i32,
    pub mCompletedLoadingThreadTasks: i32,
    pub mRecordingDemoBuffer: bool,
    pub mPlayingDemoBuffer: bool,
    pub mManualShutdown: bool,
    pub mDemoPrefix: StdBasicString,
    pub mDemoFileName: StdBasicString,
    pub mDemoBuffer: Buffer,
    pub mDemoLength: i32,
    pub mLastDemoMouseX: i32,
    pub mLastDemoMouseY: i32,
    pub mLastDemoUpdateCnt: i32,
    pub mDemoNeedsCommand: bool,
    pub mDemoIsShortCmd: bool,
    pub mDemoCmdNum: i32,
    pub mDemoCmdOrder: i32,
    pub mDemoCmdBitPos: i32,
    pub mDemoLoadingComplete: bool,
    pub mHandleToIntMap: StdMap,
    pub mCurHandleNum: i32,
    pub mDemoMarkerList: StdList,
    pub mDebugKeysEnabled: bool,
    pub mEnableMaximizeButton: bool,
    pub mCtrlDown: bool,
    pub mAltDown: bool,
    pub mAllowAltEnter: bool,
    pub mSyncRefreshRate: i32,
    pub mVSyncUpdates: bool,
    pub mVSyncBroken: bool,
    pub mVSyncBrokenCount: i32,
    pub mVSyncBrokenTestStartTick: u32,
    pub mVSyncBrokenTestUpdates: u32,
    pub mWaitForVSync: bool,
    pub mSoftVSyncWait: bool,
    pub mUserChanged3DSetting: bool,
    pub mAutoEnable3D: bool,
    pub mTest3D: bool,
    pub mMinVidMemory3D: u32,
    pub mRecommendedVidMemory3D: u32,
    pub mWidescreenAware: bool,
    pub mWidescreenTranslate: bool,
    pub mScreenBounds: TRect<i32>,
    pub mEnableWindowAspect: bool,
    pub mWindowAspect: Ratio,
    pub mStringProperties: StdMap,
    pub mBoolProperties: StdMap,
    pub mIntProperties: StdMap,
    pub mDoubleProperties: StdMap,
    pub mStringVectorProperties: StdMap,
    pub mResourceManager: *mut ResourceManager,
    pub mOldWndProc: i32,
}

#[repr(C)]
pub struct SexyApp {
    pub base: SexyAppBase,
    pub mInternetManager: *mut InternetManager,
    pub mBetaSupport: *mut BetaSupport,
    pub mBetaSupportSiteOverride: StdBasicString,
    pub mBetaSupportProdNameOverride: StdBasicString,
    pub mReferId: StdBasicString,
    pub mVariation: StdBasicString,
    pub mDownloadId: u32,
    pub mRegSource: StdBasicString,
    pub mLastVerCheckQueryTime: u32,
    pub mSkipAd: bool,
    pub mDontUpdate: bool,
    pub mBuildNum: i32,
    pub mBuildDate: StdBasicString,
    pub mUserName: StdBasicString,
    pub mRegUserName: StdBasicString,
    pub mRegCode: StdBasicString,
    pub mIsRegistered: bool,
    pub mBuildUnlocked: bool,
    pub mTimesPlayed: i32,
    pub mTimesExecuted: i32,
    pub mTimedOut: bool,
}

#[repr(C)]
pub struct LawnApp {
    pub base: SexyApp,
    pub mBoard: *mut Board,
    pub mTitleScreen: *mut TitleScreen,
    pub mGameSelector: *mut GameSelector,
    pub mSeedChooserScreen: *mut SeedChooserScreen,
    pub mAwardScreen: *mut AwardScreen,
    pub mCreditScreen: *mut CreditScreen,
    pub mChallengeScreen: *mut ChallengeScreen,
    pub mSoundSystem: *mut TodFoley,
    pub mControlButtonList: StdList,
    pub mCreatedImageList: StdList,
    pub mReferId: StdBasicString,
    pub mRegisterLink: StdBasicString,
    pub mMod: StdBasicString,
    pub mRegisterResourcesLoaded: bool,
    pub mTodCheatKeys: bool,
    pub mGameMode: GameMode,
    pub mGameScene: GameScenes,
    pub mLoadingZombiesThreadCompleted: bool,
    pub mFirstTimeGameSelector: bool,
    pub mGamesPlayed: i32,
    pub mMaxExecutions: i32,
    pub mMaxPlays: i32,
    pub mMaxTime: i32,
    pub mEasyPlantingCheat: bool,
    pub mPoolEffect: *mut PoolEffect,
    pub mZenGarden: *mut ZenGarden,
    pub mEffectSystem: *mut EffectSystem,
    pub mReanimatorCache: *mut ReanimatorCache,
    pub mProfileMgr: *mut ProfileMgr,
    pub mPlayerInfo: *mut PlayerInfo,
    pub mLastLevelStats: *mut LevelStats,
    pub mCloseRequest: bool,
    pub mAppCounter: i32,
    pub mMusic: *mut Music,
    pub mCrazyDaveReanimID: i32,
    pub mCrazyDaveState: CrazyDaveState,
    pub mCrazyDaveBlinkCounter: i32,
    pub mCrazyDaveBlinkReanimID: i32,
    pub mCrazyDaveMessageIndex: i32,
    pub mCrazyDaveMessageText: StdBasicString,
    pub mAppRandSeed: i32,
    pub mBigArrowCursor: *mut HICON,
    pub mDRM: *mut PopDRMComm,
    pub mSessionID: i32,
    pub mPlayTimeActiveSession: i32,
    pub mPlayTimeInactiveSession: i32,
    pub mBoardResult: BoardResult,
    pub mKilledYetiAndRestarted: bool,
    pub mKonamiCheck: *mut TypingCheck,
    pub mMustacheCheck: *mut TypingCheck,
    pub mMoustacheCheck: *mut TypingCheck,
    pub mSuperMowerCheck: *mut TypingCheck,
    pub mSuperMowerCheck2: *mut TypingCheck,
    pub mFutureCheck: *mut TypingCheck,
    pub mPinataCheck: *mut TypingCheck,
    pub mDaisyCheck: *mut TypingCheck,
    pub mSukhbirCheck: *mut TypingCheck,
    pub mMustacheMode: bool,
    pub mSuperMowerMode: bool,
    pub mFutureMode: bool,
    pub mPinataMode: bool,
    pub mDaisyMode: bool,
    pub mSukhbirMode: bool,
}

impl LawnApp {
    pub unsafe fn instance() -> &'static mut Self {
        &mut *(*(0x6A9EC0 as *mut *mut LawnApp))
    }
}

#[cfg(test)]
mod tests {
    use std::mem::size_of;

    use crate::{LawnApp, SexyApp, SexyAppBase};

    #[test]
    fn check_SexyAppBase_size() {
        assert_eq!(size_of::<SexyAppBase>(), 1600);
    }

    #[test]
    fn check_SexyApp_size() {
        assert_eq!(size_of::<SexyApp>(), 1896);
    }

    #[test]
    fn check_LawnApp_size() {
        assert_eq!(size_of::<LawnApp>(), 2240);
    }
}
